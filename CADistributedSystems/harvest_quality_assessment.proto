syntax = "proto3";

package smartFarming;

// Service definition for Harvest Quality Assessment
service HarvestQualityAssessment {
  rpc AssessHarvestQuality(AssessHarvestQualityRequest) returns (AssessHarvestQualityResponse);
  rpc GetEnvironmentalConditions(GetEnvironmentalConditionsRequest) returns (EnvironmentalConditions);
}

// Request message for assessing harvest quality
message AssessHarvestQualityRequest {
  string field_id = 1;
  repeated ProduceSample produce_samples = 2;
  EnvironmentalConditions environmental_conditions = 3;
}

// Request message for getting environmental conditions
message GetEnvironmentalConditionsRequest {
  string field_id = 1;
}

// Response message for assessing harvest quality
message AssessHarvestQualityResponse {
  QualityAssessment quality_assessment = 1;
  bool success = 2;
  string message = 3;
}

// Message representing a produce sample
message ProduceSample {
  int32 sample_id = 1;
  string produce_type = 2;
  float weight = 3;
  string color = 4;
  float moisture_content = 5;
  // Add any other relevant attributes for the produce sample
}

// Message representing environmental conditions
message EnvironmentalConditions {
  float temperature = 1;
  float humidity = 2;
  float rainfall = 3;
  // Add any other relevant environmental conditions
}

// Message representing the quality assessment of a harvest
message QualityAssessment {
  float freshness_rating = 1;
  float sweetness_rating = 2;
  float firmness_rating = 3;
  // Add any other relevant quality assessment metrics
}